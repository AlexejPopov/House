#include <iostream>
#include <locale.h>

using namespace std;

int main()
{
    setlocale(LC_ALL, "rus");
    cout << "----------------------------------------------Программа определения подъезда и этажа по номеру квартиры!-----------------------------------------" << endl;
    /* Воспользуемся табличкой дома: в 8-м подъезде от 252-й до 288 квариры или у первого с 1-й по 36-ю квартиру.

    У нас есть всего 5 значений, которые характеризуют дом:

       - количесво подъездов в доме
       - количесво этажей в подъезде
       - количество квартир на этаже
       - количество квартир в подъезде
       - общее количество квартир в доме

    Чтобы вычислить абсолютно любой дом, нужно знать как минимум 3 значения, а оставшиеся 2 вычислятся из этих трех. Например:
            * количесво подъездов ------------- 8
            * количесво этажей ---------------- 9
            * количество квартир в подъезде -- 36
    След, 36/9=4 квартиры на этаже, 36*8=288 всего квартир в доме. */

    int kv = 0, pod = 0, et = 0;                                                          // вспомогательные переменные - квартира, подъезд и этаж
    cout << "Введите номер квартиры: "; cin >> kv;

    // I. Выполним проверку пользовательского ввода на диапазон значений
    if (kv <= 0)
        cout << "Такой квартиры не существует!" << endl;
    else
    {
        //if (kv <= 36)cout << "Квартира находится в 1 подъезде!" << endl;
        //if (kv > 36 && kv <= 72)cout << "Квартира находится во 2 подъезде!" << endl;
        //if (kv > 72 && kv <= 108)cout << "Квартира находится в 3 подъезде!" << endl;
        //if (kv > 108 && kv <= 144)cout << "Квартира находится в 4 подъезде!" << endl;
        //if (kv > 144 && kv <= 180)cout << "Квартира находится в 5 подъезде!" << endl;
        //if (kv > 180 && kv <= 216)cout << "Квартира находится в 6 подъезде!" << endl;
        //if (kv > 216 && kv <= 252)cout << "Квартира находится в 7 подъезде!" << endl;
        //if (kv > 252 && kv <= 288)cout << "Квартира находится в 8 подъезде!" << endl;
        if (kv > 288)cout << "Такой квартиры нет в этом доме!" << endl;
        else
        {
            pod = kv / 36;                                                                // формула взаимосвязи квартиры и подъезда (но с предыдущим подъездом)
            if (kv % 36 == 0)
                cout << "Квартира находится в " << pod << " подъезде!" << endl;           // подъезд для последней квартиры в подъезде
            else
                cout << "Квартира находится в " << pod + 1 << " подъезде!" << endl;       // подъезд для остальных квартир в доме


            et = (kv - pod * 36) / 4;                                                     // формула взаимосвязи квартиры и этажа (но с этажом ниже) 
            if (kv % 36 == 0)                                                             // т.к. для последней квартиры в подъезде pod равна текущему подъезду, след,
                cout << "Квартира находится на " << et + 9 << " этаже!" << endl;          // отнимутся все квартиры и будет 0! Остаток от деления поможет нам отделить
            else                                                                          // эти квартиры от остальных и отправить их на последний этаж добавив в et 9
                if (kv % 4 == 0)
                    cout << "Квартира находится на " << et << " этаже!" << endl;          // этаж для последней квартиры на этаже
                else
                    cout << "Квартира находится на " << et + 1 << " этаже!" << endl;      // этаж для остальных квартир в доме
        }
    }

    /* Вспомогательные вычисления:

    133 кв. в 4 подъезде     (3)
    25 кв.  в 1 подъезде     (0)
    260 кв. в 8 подъезде     (7)
    92 кв. в 3 подъезде      (2) => наша формула для подъезда кв/36, где 36 это количество квартир в подъезде!
    (!) у нас делится с остатком, след, целое число показывает нам количество предыдущих подъездов, а не нужный нам подъезд! След, нужно увеличить формулу на 1 подъезд!
    кв/36 + 1 = номер для нужного нам подъезда, но последняя квартира в подъезде по этой формуле делится без остатка и след, переезжает в след.подъезд! Этих квартир
    всего 8 (по количеству подъездов), т.о. погрешность формулы невелика. И эти квартиры краны 36 и след, их остаток от деления равен 0 (180%36==0). Воспользуемся этим!

    Разберемся с этажми на примере 1 подъезда.
    (!) '=' это присваивание, а не равенство, след, формулу для расчета 'pod' мы не можем подставить в формулу 'et', а подставляем лишь присвоенное в pod значение в et!
    25 кв. находися на 7 этаже      (6)
    13 кв. находися на 4 этаже      (3)
    30 кв. находися на 8 этаже      (7)
    9 кв. находися на 3 этаже       (2)
    Наша формула кв/4 (где 4 это всего квартир на этаже). Т.к. у нас делится с остатком, то целое число показывает нам количество этажей ниже нашего! Таже логика.
    кв/4 + 1 = номер этажа, но эта формула считает только для 1-го подъезда. Чтобы посчитать для последующих подъездов нужно определить порядковое место для каждой
    квартиры в каждом подъезде. 13-я квартира находится на 13-м месте в 1-м подъезде, а 133-я квартира где? След, необходимо вычесть из нее все квартиры находящиеся в
    предыдущих подъездах: (133-3*36)/4+1. Но где взяь 3? Это количество предыдущих подъездов, а именно текущий подъезд -1. А это значение хранится в переменной pod!
    et=(kv-pod*36)/4,
    получаем значение переменной этаж, которая сообщает фактический этаж -1 (если делится с остатком).
    Но не для всех квартир это будет работать, т.к. у нас были проблемы с кратностью, след, эта проблема возникнет и с последней квартирой на этаже!
    Для последней квартиры на этаже формула:
    (kv-pod*36)/4
    А для всех остальных квартир в доме:
    (kv-pod*36)/4+1
    Все работает кроме квартир 36, 72, 108, ... (последних квартир в подъездах)
    72-2*36=0, 0/4=0! Последняя квартира в подъезде попадает под правило kv % 36 == 0, а находится она будет на последнем этаже, след, +9 этажей.

    Оптимизируем программу:

    Мы видим, что у нас одно и тоже условие проверяется 2 раза!
    Вторая проверка пройдет чтобы подсчитать этаж для последних квартир в подъездах, след, чтобы вторую проверку исключить нужно 'et' и 'pod' вычислить одновременно!
    Вычислим их вместе и проверим сразу подъезд и этаж для последней квартиры в подъездеде. Т.к. она сразу находится в подъезде под названием pod и на этаже et+9, то
    произведем объединение действий обеих проверок. А если квартира не последняя в подъезде, то она находится в pod+1, а этаж мы еще должны проверить, не последняя
    ли она на этаже.

    Мы оптимизировали:

    1. Логически - оптимизация алгоритма работы программы, самой логики. Чтобы не писать грязный код, а найти закономерность, формулу, логику работы программы.
    2. Технически - оптимизация самого кода: что-то объединить, переставить, упростить, добавить функцию, цикл и т.д.

    Оптимизированный код напишем ниже: */

    // II. Выполним проверку пользовательского ввода на диапазон значений
    if (kv <= 0)
        cout << "Такой квартиры не существует!" << endl;
    else
    {
        if (kv > 288)cout << "Такой квартиры нет в этом доме!" << endl;
        else                                                                                // когда номер квартиры от 1 до 288
        {
            pod = kv / 36;                                                                  // подъезд для последней квартиры (фактический подъезд -1)
            et = (kv - pod * 36) / 4;                                                       // et - фактический этаж -1

            if (kv % 36 == 0)                                                               // последняя квартира в подъезде
            {
                cout << "Квартира находится в " << pod << " подъезде!" << endl;
                cout << "Квартира находится на " << et + 9 << " этаже!" << endl;
            }
            else                                                                            // непоследняя квартира в подъезде
            {
                cout << "Квартира находится в " << pod + 1 << " подъезде!" << endl;
                if (kv % 4 == 0)
                    cout << "Квартира находится на " << et << " этаже!" << endl;             // последняя квартира на этаже
                else
                    cout << "Квартира находится на " << et + 1 << " этаже!" << endl;         // обычная квартира
            }
        }
    }
}
/* Д/З
Вместо целочисленных литералов 288, 36,... нужно поставить значения, коорые вводятся с клавиатуры пользователем (5 переменных). Проверить на разных
домах.
2*. Спросили 3 величины, оставшиеся 2 вычислили, спросив конечно номер квартиры. */